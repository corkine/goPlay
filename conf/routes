######## 受保护 API - BASIC OR TOKEN OR QUERY ##########
GET     /data                       controllers.Default.redirect(to="/list")
GET     /list                       controllers.HomeController.list(limit:Option[Int])
GET     /logs                       controllers.HomeController.listLogs(day:Option[Int], limit:Option[Int], ip:Option[Boolean])
GET     /info/:shortUrl             controllers.HomeController.info(shortUrl:String)
GET     /info/:shortUrl/secret/:secret     controllers.HomeController.setSecret(shortUrl:String,secret:String)
GET     /infoId/:id                 controllers.HomeController.infoId(id:Long)
GET     /logs/:shortUrl             controllers.HomeController.goHistory(shortUrl:String)
GET     /logsId/:id                 controllers.HomeController.goHistoryById(id:Long)
GET     /check/:keyword             controllers.HomeController.checkKeyword(keyword:String)
GET     /s/:keyword                 controllers.HomeController.searchKeyword(keyword:String, useJson:Boolean=false)
GET     /sj/:keyword                controllers.HomeController.searchKeyword(keyword:String, useJson:Boolean=true)
GET     /search/:keyword            controllers.HomeController.searchKeyword(keyword:String, useJson:Boolean=false)
GET     /searchjson/:keyword        controllers.HomeController.searchKeyword(keyword:String, useJson:Boolean=true)
GET     /add                        controllers.HomeController.addGet(keyword:String, redirectURL:String, note:Option[String])
+nocsrf
POST    /add                        controllers.HomeController.addJSON
GET     /deleteKey/:keyword         controllers.HomeController.deleteKeyword(keyword:String)
GET     /delete/:id                 controllers.HomeController.delete(id:Long)
GET     /token                      controllers.HomeController.token
GET     /user/:username/:password/addadmin   controllers.HomeController.addUpdateDeleteUser(username:String,password:String,isAdd:Boolean=true,isAdmin:Boolean=true,isDelete:Boolean=false,isUpdate:Boolean=false)
GET     /user/:username/:password/addcommon   controllers.HomeController.addUpdateDeleteUser(username:String,password:String,isAdd:Boolean=true,isAdmin:Boolean=false,isDelete:Boolean=false,isUpdate:Boolean=false)
GET     /user/:username/:password/delete   controllers.HomeController.addUpdateDeleteUser(username:String,password:String,isAdd:Boolean=false,isAdmin:Boolean=false,isDelete:Boolean=true,isUpdate:Boolean=false)
GET     /user/:username/:password/update   controllers.HomeController.addUpdateDeleteUser(username:String,password:String,isAdd:Boolean=false,isAdmin:Boolean=false,isDelete:Boolean=false,isUpdate:Boolean=true)
GET     /user/list                  controllers.HomeController.listUsers()

#######  公共 API  ########
GET     /                           controllers.HomeController.index
GET     /id/:id                     controllers.HomeController.id(id:Long)
GET     /manage                     controllers.Assets.at(path="/public", file="index.html")
GET     /schema/:clazz              controllers.HomeController.schema(clazz:String)
# 匹配单级
GET     /$shortUrl<(CM|cm).*?>      controllers.HomeController.goGood(shortUrl:String)
GET     /goods/:shortUrl            controllers.HomeController.goGood(shortUrl:String)
GET     /repo/:repoUrl              controllers.HomeController.repoRedirect(repoUrl:String)
GET     /$shortUrl<temp.*?>/:shortUrl   controllers.HomeController.go(shortUrl:String)
GET     /$before<before\d\d\d\d\d\d\d\d>/:shortUrl   controllers.HomeController.goBefore(shortUrl:String,before:String)
GET     /:keyword/all               controllers.HomeController.searchKeyword(keyword:String,useJson:Boolean=false)
GET     /:keyword/json              controllers.HomeController.searchKeyword(keyword:String,useJson:Boolean=true)
GET     /:keyword/alljson              controllers.HomeController.searchKeyword(keyword:String,useJson:Boolean=true)
GET     /:shortUrl/info             controllers.HomeController.info(shortUrl:String)
GET     /:shortUrl/secret           controllers.HomeController.setSecret(shortUrl:String,secret:String="")
GET     /:shortUrl/secret/          controllers.HomeController.setSecret(shortUrl:String,secret:String="")
GET     /:shortUrl/secret/:secret   controllers.HomeController.setSecret(shortUrl:String,secret:String)
GET     /:shortUrl                  controllers.HomeController.go(shortUrl:String)
# 匹配多级
GET     /*file               controllers.Assets.versioned(path="/public", file: Asset)


      